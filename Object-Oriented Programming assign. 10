//~~~~~~~~~~~~~~~~ person.cs: ~~~~~~~~~~~~~~~~



using System.Security.Cryptography.X509Certificates;

public class Person //class itslf
{

    private static int _nextId;

    private static readonly int Id;

    public string Name;//instance properties IP
    public int Age;//IP

    public bool IsAdult
    {
        get { return Age >= 18; }
    }

    public Person(string name, int age) //constructor
    {
        Name = name;// Assignment 9
        Age = age;// Assignment 9

        _nextId = Id; // Assignment 10

        _nextId = _nextId + 1; // Assignment 10
    }

    public string Introduce()
    {
        return $"Hi, my name is {Name} and I'm {Age} years old :)";
    }

    public string HappyBirthday()// method
    {
       
            Age = Age + 1;
        
           
        return $"HappyBirth {Name}";
    }

    public static string GreetAll(List<Person> people)//method
    {
        string introductions = "";

        foreach (Person person in people)
        {
            introductions += person.Introduce();//line 39 redoes line 23

            introductions += "\n";
        }

        return introductions;
    }

    public override string ToString()//method
    {
        //return base.ToString();
        return $"{Name}, {Age}";
    }

public bool IsOlderThan(Person person)
    {
        

        return Age > person.Age;// is greater sign is acting as: True if Age is bigger than person.Age
    }
}


//~~~~~~~~~~~~~~~~~~~~~~ Program.cs: ~~~~~~~~~~~~~~~~~~~~~~


using System.Runtime.CompilerServices;

Person P1 = new Person("Elmo", 3);//create new instance

Person P2 = new Person("Cookie Monster", 500);// instance

Person P3 = new Person("Daryle", 60);// instance

Person P4 = new Person("Freddy", 15);// instance

Person P5 = new Person("Chippers", 20);// instance

if (P1.Age <= 0)
{
    System.Console.WriteLine("Age cannot be negative.");
}

else
{
    System.Console.WriteLine(P1.Introduce());
}


System.Console.WriteLine(P1.HappyBirthday());//Called method

System.Console.WriteLine($"{P1.IsAdult}");

List<Person> people;
people = new List<Person>();
// All People inside GreetAll
people.Add(P1);

people.Add(P2);

people.Add(P3);

people.Add(P4);

people.Add(P5);

System.Console.WriteLine(Person.GreetAll(people));//call method

System.Console.WriteLine(P2.ToString());//call

System.Console.WriteLine(P1.IsOlderThan(P2));//call


